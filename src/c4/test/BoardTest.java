package c4.test;

import static org.junit.Assert.*;
import c4.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class BoardTest {

	public Board testBoard;
	
	@Before
	public void setUp() throws Exception {
		testBoard = new Board();
	}

	@After
	public void tearDown() throws Exception {
		testBoard = null;
	}
	
  ///////////////////////////////////////////////////////////////////////////////////////
  ////	Test constructor
  ///////////////////////////////////////////////////////////////////////////////////////

  ///////////////////////////////////////////////////////////////////////////////////////
  ////	Test win checking, player 1
  ///////////////////////////////////////////////////////////////////////////////////////
	@Test
	public void testWinHorizontalPlayer1() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinVerticalPlayer1() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinDiagonal1Player1() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinDiagonal2Player1() {
		fail("Not yet implemented");
	}
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test win checking, player 2
	///////////////////////////////////////////////////////////////////////////////////////
	
	@Test
	public void testWinHorizontalPlayer2() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinVerticalPlayer2() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinDiagonal1Player2() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testWinDiagonal2Player2() {
		fail("Not yet implemented");
	}
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test does not find win when not all tiles from same player
	///////////////////////////////////////////////////////////////////////////////////////
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test draw checking
	///////////////////////////////////////////////////////////////////////////////////////
	
	// yes
	
	// no
	
	// no because with error on previous placement
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test place tile
	///////////////////////////////////////////////////////////////////////////////////////
	// correct output over 3 rounds for current player
	// correct error output when not find empty space
	// correct error output when not a column in the board
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test get actions
	///////////////////////////////////////////////////////////////////////////////////////

	// Proper when nothing there
	// Proper after some actions
	// Does not add action when it was an error and a tile was not played
	// Displays one action for every position in the board once the board is full.
	
	///////////////////////////////////////////////////////////////////////////////////////
	////	Test board to string
	///////////////////////////////////////////////////////////////////////////////////////
	
	// fine at 0
	// fine with player 1
	// fine with player 2
	// fine with both
	// fine at end.
	// no change after error
}
